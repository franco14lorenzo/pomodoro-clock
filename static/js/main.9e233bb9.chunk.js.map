{"version":3,"sources":["components/Me.jsx","App.jsx","index.js"],"names":["Me","class","href","target","rel","App","useState","isSettingsOn","setIsSettingsOn","session","setSession","time","setTime","rest","setRest","isTimerOn","setIstimerOn","onBreak","setOnBreak","counter","setCounter","beep","useRef","useEffect","playBreakSound","console","log","current","play","formatTime","minutes","Math","floor","seconds","changeTime","type","amount","prev","className","id","onClick","src","ref","Date","getTime","nextDate","modo","count","interval","setInterval","localStorage","clear","setItem","clearInterval","getItem","controlTimer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9e233bb9.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Me() {\r\n    return(\r\n        <div class=\"footer\">by <a href=\"https://github.com/franco14lorenzo\" target=\"_blank\" rel=\"noreferrer\">\r\n            <u>Franco Lorenzo</u></a>\r\n        </div>\r\n    )\r\n}\r\nexport default Me","import React from 'react';\nimport { useState, useRef, useEffect } from 'react';\nimport './App.scss';\nimport Me from './components/Me'\n\nfunction App() {\n\n  const [isSettingsOn, setIsSettingsOn] = useState(false);\n  const [session, setSession] = useState(25*60);\n  const [time, setTime] = useState(25*60);\n  const [rest, setRest] = useState(5*60);\n  const [isTimerOn, setIstimerOn] = useState(false);\n  const [onBreak, setOnBreak] = useState(false);\n  const [counter, setCounter] = useState(1);\n  \n  let beep = useRef()\n   \n \n  useEffect(() => {\n    if (time <= 0) {\n      setOnBreak(true);\n      playBreakSound();\n    \n    } else if (!isTimerOn && time === rest) {\n      setOnBreak(false);\n      \n      \n    }\n    console.log(\"test\");\n  }, [time, onBreak, isTimerOn, rest, session, isSettingsOn, counter])\n\n  const playBreakSound = () => {\n    beep.current.play()\n  }\n\n  const formatTime = (time) => {\n    let minutes = Math.floor(time / 60)\n    let seconds = (time % 60)\n\n    return (\n      (minutes < 10 ? \"0\" + minutes : minutes) +\n      \":\" +\n      (seconds < 10 ? \"0\" + seconds : seconds)\n    )\n  }\n\n  const changeTime = (type, amount) => {\n    if (type === \"break\"){   \n      if(rest <= 60 && amount < 0){\n        return\n      }   \n      setRest(prev => prev + amount)     \n    }else{\n      if(session <= 60 && amount < 0){\n        return\n      }      \n      setSession(prev => prev + amount) \n      if (isTimerOn === false){\n        setTime(prev => prev + amount)\n      }  \n    }\n  }\n\n  const resetClock = () => {\n    setRest(5*60)\n    setSession(25*60)\n    setTime(25*60)\n    if (isTimerOn){\n      setIstimerOn(false)\n    }    \n  }\n\n  const controlTimer = () => {\n      \n    let second = 1000\n    let date = new Date().getTime()\n    let nextDate = new Date().getTime() + second\n    let modo = onBreak\n   let count = counter\n  \n  \n    if (!isTimerOn){\n      \n      let interval = setInterval(() => {\n        date = new Date().getTime()\n        if (date > nextDate){\n\n            setTime((prev) => {\n           if (prev <= 0 && !modo){\n              //playBreakSound()\n              modo = true\n             count = count - 1\n              //setOnBreak(true) \n              \n                          \n              return rest\n            }else if (prev <= 0 && modo){            \n              //playBreakSound()\n              modo = false\n              count = count +1\n              \n              \n                setCounter(count)\n                count = count +1\n              \n              setOnBreak(false)  \n            \n                         \n              return session\n            }else{\n              return prev - 1           \n\n            }\n           \n          })\n          nextDate += second\n        }\n      }, 30)\n      localStorage.clear()\n      localStorage.setItem(\"interval-id\", interval)\n    }\n\n    if(isTimerOn){\n      clearInterval(localStorage.getItem(\"interval-id\"))\n    }\n\n    setIstimerOn(!isTimerOn)\n  }\n  \n  return (\n    <div className=\"App\">\n      {!isSettingsOn ? ( <div>\n         <div id=\"timer\">\n        <h3 id=\"timer-label\">{onBreak ? \"BREAK \"+counter : \"SESSION \"+counter}</h3>\n        <div id=\"time-left\">\n          {formatTime(time)}\n        </div>\n        <audio src='https://actions.google.com/sounds/v1/alarms/beep_short.ogg' ref={beep} id=\"beep\"></audio>\n        <div id=\"controls-buttons\">\n          <button id=\"play-pause\" className=\"button\" onClick={() => controlTimer()}>\n            {isTimerOn ? (\n              <i class=\"fas fa-pause\"></i>\n              ): (\n               <i class=\"fas fa-play\"></i>\n              )}\n          </button>\n          {isTimerOn ? (\n              \"\"\n              ): (\n                <button id=\"reset\" className=\"button\" onClick={() => resetClock()}><i class=\"fas fa-history\"></i></button>\n              )}\n         \n        </div>\n      </div>\n      <div id=\"panel\">\n      <button className=\"button\" id=\"config\" onClick={()=>(setIsSettingsOn(true))}><i class=\"fas fa-cog\"></i>Settings</button>\n      </div>\n      <Me />\n      </div> )\n      : ( \n        <div id=\"cog\"> \n          <div id=\"settings\">\n            <h1>Settings</h1>\n            <div id=\"session-label\">\n              <h5>Session Length</h5>\n              <div className=\"config\">\n                    <button className=\"button\" id=\"session-increment\" onClick={() => changeTime(\"session\", 60)}><i class=\"fas fa-arrow-up\"></i></button>\n                <div id=\"session-length\" className=\"block\">{formatTime(session)}</div>\n                    <button className=\"button\" id=\"session-decrement\" onClick={() => changeTime(\"session\", -60)}><i class=\"fas fa-arrow-down\"></i></button>\n                \n              </div>\n            </div>\n             <div id=\"break-label\">\n              <h5>Break Length</h5>\n              <div className=\"config\">\n                    <button className=\"button\" id=\"break-increment\" onClick={() => changeTime(\"break\", 60)}><i class=\"fas fa-arrow-up\"></i></button>\n                <div id=\"break-length\" className=\"block\">{formatTime(rest)}</div>\n                    <button className=\"button\" id=\"break-decrement\" onClick={() => changeTime(\"break\", -60)}><i class=\"fas fa-arrow-down\"></i></button>\n                 \n               </div>\n            </div>\n          </div>\n          <div id=\"panel\">\n          <button className=\"button\" id=\"cog\" onClick={()=>(setIsSettingsOn(false))}><i class=\"fas fa-arrow-left\"></i> Return</button>\n          </div>\n          <Me />\n        </div>)}\n      \n     \n     \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport { Provider } from 'react-redux';\n\n\nReactDOM.render(\n  <React.StrictMode>\n      \n      <App />\n      \n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}